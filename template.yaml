AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  garmin-connection-aws-cron

  Runs a daily lambda function to gather data from Garmin Connect and store it in S3.

Globals:
  Function:
    Timeout: 20

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket

  GarminUsername:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: garmin-connection-aws-cron-user
      Description: "Garmin Connect Username"

  GarminPassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: garmin-connection-aws-cron-pass
      Description: "Garmin Connect Password"

  GarminFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      Events:
        GathererDataSchedule:
          Type: Schedule
          Properties:
            Schedule: 'rate(1 day)'
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GarminUsername
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GarminPassword
      Environment:
        Variables:
          GARMIN_S3_BUCKET: !Ref S3Bucket
          GARMIN_USERNAME: !Ref GarminUsername
          GARMIN_PASSWORD: !Ref GarminPassword

Outputs:
  GarminFunction:
    Description: "GarminFunction Lambda Function ARN"
    Value: !GetAtt GarminFunction.Arn
  GarminFunctionIamRole:
    Description: "Implicit IAM Role created for GarminFunction function"
    Value: !GetAtt GarminFunctionRole.Arn
